from aiogram import types, Dispatcher
from create_bot import dp, bot
from data_base import sqlite_db
from keyboards import client_kb, admin_kb
from handlers import admin
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from datetime import date
todays = date.today()


class FSMAdmin(StatesGroup):
    date_f = State()
    weekend = State()
#start, help
async def command_start(message : types.Message):
    try:   
        await message.answer('üëãDobr√Ω den {0},Jsem pomocn√≠k Ari. Pojƒème se se mnou objednat na ≈ôasy a j√° ji p≈ôed√°m tvoji objedn√°vkuü´∂üèª'.format(message.from_user.first_name), reply_markup=client_kb.markup_write)
        # await bot.send_photo(message.chat.id, photo=open('handlers\img\olga.jpg', 'rb'))
        
        await message.delete()
        await bot.send_message(chat_id=955818676, text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –∑–∞—à—ë–ª –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º') # –∞—Ä–∏–Ω–∞
        await bot.send_message(chat_id=692604698, text=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.first_name} –∑–∞—à—ë–ª –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º') # —è
    except:
        await message.reply('–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º —á–µ—Ä–µ–∑ –õ–°: https://t.me/Ari_shki_bot')

#–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–ª–æ–Ω–µ

async def repeat_all_messages(message): # –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –∏–≥—Ä–∞–µ—Ç –Ω–∏–∫–∞–∫–æ–π —Ä–æ–ª–∏
    await message.answer(text="/start")

async def sql_read_client(message: types.Message):
    await FSMAdmin.date_f.set()
    await bot.send_message(chat_id=message.chat.id, text=f'–í–≤–µ–¥–∏ –¥–∞—Ç—É –ø–æ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –ø–æ–∏—Å–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ (–î–µ–Ω—å-–ú–µ—Å—è—Ü)')
async def sql_read_client_date(message: types.Message, state: FSMContext): 
    try:   
        async with state.proxy() as data:
            data['date_f'] = message.text
        answer = await sqlite_db.sql_read_command(message.text)
        await bot.send_message(chat_id=message.chat.id, text=f'–í–æ—Ç —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –¥–∞—Ç–µ')
        for i in answer:
            await message.answer(i)
        await state.finish()
    except:
        await bot.send_message(message.chat.id, text='–ù–∞ –¥–∞–Ω–Ω—É—é –¥–∞—Ç—É –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç')
        await state.finish()
    
async def admin_def(message: types.Message):
    await message.answer(text='–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?\n\n/–î–æ–±–∞–≤–∏—Ç—å - –¥–æ–±–∞–≤–∏—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–∏ÃÜ –¥–µ–Ω—å\n/–û–±–∑–æ—Ä - –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—ã—Ö–æ–¥–Ω—ã–µ\n/–û–±–Ω–æ–≤–∏—Ç—å - –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–π –∏ –±–ª–∏–∂–∞–π—à–∏–π –º–µ—Å—è—Ü\n/–ó–∞–ø–∏—Å—å –ø–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π –ø–æ –¥–∞—Ç–µ', reply_markup=admin_kb.kb_admin)

async def weekends(message: types.Message):
    await FSMAdmin.weekend.set()
    await message.answer(f'–í–≤–µ–¥–∏ –¥–∞—Ç—É –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è –≤ {todays.month} –º–µ—Å—è—Ü–µ')

async def weekends_set(message: types.Message, state: FSMContext):
    async with state.proxy() as data:
        data['weekend'] = message.text
    try:
        await sqlite_db.sql_add_weekend(message.text)
        await state.finish()
        await message.answer('–í—ã—Ö–æ–¥–Ω–æ–∏ÃÜ –¥–µ–Ω—å –¥–æ–±–∞–≤–ª–µ–Ω')
    except:
        await message.answer('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ (–î–µ–Ω—å-M–µ—Å—è—Ü)')

async def read_weekends(message: types.Message):
    await sqlite_db.sql_read_weekends(message)

async def update(message: types.Message):
    await sqlite_db.sql_add_month()
    await message.answer('–ú–µ—Å—è—Ü –æ–±–Ω–æ–≤–ª–µ–Ω')


def register_handlers_client(dp : Dispatcher):
    dp.register_message_handler(command_start, commands=['start', 'help'])
    dp.register_message_handler(admin.sql_client, text = '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è', state=None)
    dp.register_message_handler(sql_read_client, commands=['–ó–∞–ø–∏—Å—å'])
    dp.register_message_handler(sql_read_client_date, state=FSMAdmin.date_f)
    dp.register_message_handler(admin_def, commands=['admin_ari'], state=None)
    dp.register_message_handler(weekends, commands=['–¥–æ–±–∞–≤–∏—Ç—å'])
    dp.register_message_handler(weekends_set, state=FSMAdmin.weekend)
    dp.register_message_handler(read_weekends, commands = ['–û–±–∑–æ—Ä'])
    dp.register_message_handler(update, commands = ['–æ–±–Ω–æ–≤–∏—Ç—å'])
    dp.register_message_handler(admin.delete_client, commands=['–£–¥–∞–ª–∏—Ç—å'], state=None)
    dp.register_message_handler(repeat_all_messages, content_types=["text"])
    



async def cancel(call: types.CallbackQuery):
    await call.message.edit_text('–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?')

def register_callback_handlers(dp : Dispatcher):
    dp.register_callback_query_handler(admin.delete_client, lambda c: c.data == 'delete')
    dp.register_callback_query_handler(cancel, lambda c: c.data == 'cancel')
    dp.register_callback_query_handler(admin.sql_client, lambda c: c.data == 'write')
